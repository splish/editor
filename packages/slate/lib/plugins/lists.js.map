{"version":3,"sources":["../../src/plugins/lists.js"],"names":["UL","OL","LI","ListsPlugin","props","createButton","type","icon","editorState","onChange","onClick","e","preventDefault","isList","blocks","some","block","isType","Boolean","document","getClosest","key","parent","transform","setBlock","DEFAULT_NODE","unwrapBlock","wrapBlock","apply","name","nodes","toolbarButtons","deserialize","el","next","tagName","toLowerCase","kind","childNodes","serialize","object","children","plugins","types","typeItem","typeDefault"],"mappings":"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","file":"lists.js","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *  \n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *  \n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\n/* eslint-disable prefer-reflect, default-case, react/display-name */\nimport React from 'react'\nimport ListIcon from 'material-ui/svg-icons/action/list'\nimport OrderedListIcon from 'material-ui/svg-icons/editor/format-list-numbered'\nimport createListPlugin from 'slate-edit-list'\nimport type { Props } from './props'\n\nimport { makeTagNode, ToolbarButton } from '../helpers'\nimport Plugin from './Plugin'\n\nexport const UL = 'LISTS/UNORDERED-LIST'\nexport const OL = 'LISTS/ORDERED-LIST'\nexport const LI = 'LISTS/LIST-ITEM'\n\nexport default class ListsPlugin extends Plugin {\n  constructor(props: Props) {\n    super(props)\n\n    this.plugins = [\n      createListPlugin({\n        types: [UL, OL],\n        typeItem: LI,\n        typeDefault: props.DEFAULT_NODE\n      })\n    ]\n  }\n\n  props: Props\n\n  // eslint-disable-next-line react/display-name\n  createButton = (type, icon) => ({ editorState, onChange }: Props) => {\n    const onClick = e => {\n      e.preventDefault()\n\n      const isList = editorState.blocks.some(block => block.type === LI)\n      const isType = editorState.blocks.some(block =>\n        Boolean(\n          editorState.document.getClosest(\n            block.key,\n            parent => parent.type === type\n          )\n        )\n      )\n\n      let transform = editorState.transform()\n\n      if (isList && isType) {\n        transform = transform\n          .setBlock(this.DEFAULT_NODE)\n          .unwrapBlock(UL)\n          .unwrapBlock(OL)\n      } else if (isList) {\n        transform = transform.unwrapBlock(type === UL ? OL : UL).wrapBlock(type)\n      } else {\n        transform = transform.setBlock(LI).wrapBlock(type)\n      }\n\n      onChange(transform.apply())\n    }\n\n    const isList = editorState.blocks.some(block => block.type === LI)\n    const isType = editorState.blocks.some(block =>\n      Boolean(\n        editorState.document.getClosest(\n          block.key,\n          parent => parent.type === type\n        )\n      )\n    )\n\n    return (\n      <ToolbarButton\n        onClick={onClick}\n        isActive={isList && isType}\n        icon={icon}\n      />\n    )\n  }\n\n  name = 'lists'\n\n  nodes = {\n    [UL]: makeTagNode('ul'),\n    [OL]: makeTagNode('ol'),\n    [LI]: makeTagNode('li')\n  }\n\n  toolbarButtons = [\n    this.createButton(UL, <ListIcon />),\n    this.createButton(OL, <OrderedListIcon />)\n  ]\n\n  deserialize = (el, next) => {\n    switch (el.tagName.toLowerCase()) {\n      case 'ul':\n        return {\n          kind: 'block',\n          type: UL,\n          nodes: next(el.childNodes)\n        }\n      case 'li':\n        return {\n          kind: 'block',\n          type: LI,\n          nodes: next(el.childNodes)\n        }\n      case 'ol':\n        return {\n          kind: 'block',\n          type: OL,\n          nodes: next(el.childNodes)\n        }\n    }\n  }\n\n  serialize = (object: { type: string, kind: string }, children: any[]) => {\n    if (object.kind !== 'block') {\n      return\n    }\n    switch (object.type) {\n      case UL:\n        return <ul>{children}</ul>\n      case LI:\n        return <li>{children}</li>\n      case OL:\n        return <ol>{children}</ol>\n    }\n  }\n}\n"]}