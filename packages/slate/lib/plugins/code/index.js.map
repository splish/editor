{"version":3,"sources":["../../../src/plugins/code/index.js"],"names":["CODE","CodePlugin","props","createButton","type","icon","Button","editorState","onChange","onClick","e","preventDefault","transform","toggleMark","apply","isActive","marks","some","mark","createNodeButton","blocks","block","setBlock","DEFAULT_NODE","name","nodes","hoverButtons","toolbarButtons","deserialize","el","next","tagName","toLowerCase","kind","data","create","childNodes","serialize","object","children","overflow"],"mappings":"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","file":"index.js","sourcesContent":["/*\n * This file is part of ORY Editor.\n *\n * ORY Editor is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *  \n * ORY Editor is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *  \n * You should have received a copy of the GNU Lesser General Public License\n * along with ORY Editor.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @license LGPL-3.0\n * @copyright 2016-2018 Aeneas Rekkas\n * @author Aeneas Rekkas <aeneas+oss@aeneas.io>\n *\n */\n\n/* eslint-disable prefer-reflect, default-case, react/display-name */\nimport React from 'react'\nimport CodeIcon from 'material-ui/svg-icons/action/code'\nimport { Data } from 'slate'\nimport { makeTagMark, ToolbarButton } from '../../helpers'\nimport Plugin from '../Plugin'\nimport Code from './node'\nimport type { Props } from '../props'\n\nexport const CODE = 'CODE/CODE'\n\nexport default class CodePlugin extends Plugin {\n  constructor(props: Props) {\n    super(props)\n\n    this.DEFAULT_NODE = props.DEFAULT_NODE\n  }\n\n  props: Props\n\n  createButton = (type, icon) => {\n    const Button = ({ editorState, onChange }: Props) => {\n      const onClick = e => {\n        e.preventDefault()\n\n        onChange(\n          editorState\n            .transform()\n            .toggleMark(type)\n            .apply()\n        )\n      }\n\n      const isActive =\n        editorState && editorState.marks.some(mark => mark.type === type)\n\n      return <ToolbarButton onClick={onClick} isActive={isActive} icon={icon} />\n    }\n\n    return Button\n  }\n\n  createNodeButton = (type, icon) => {\n    const Button = ({ editorState, onChange }: Props) => {\n      const onClick = e => {\n        e.preventDefault()\n\n        const isActive = editorState.blocks.some(block => block.type === type)\n\n        onChange(\n          editorState\n            .transform()\n            .setBlock(isActive ? this.DEFAULT_NODE : type)\n            .apply()\n        )\n      }\n\n      const isActive = editorState.blocks.some(block => block.type === type)\n\n      return <ToolbarButton onClick={onClick} isActive={isActive} icon={icon} />\n    }\n\n    return Button\n  }\n\n  name = 'code'\n\n  marks = { [CODE]: makeTagMark('code') }\n  nodes = { [CODE]: Code }\n\n  hoverButtons = [this.createButton(CODE, <CodeIcon />)]\n  toolbarButtons = [this.createNodeButton(CODE, <CodeIcon />)]\n\n  deserialize = (el, next) => {\n    switch (el.tagName.toLowerCase()) {\n      case 'code':\n        return {\n          kind: 'mark',\n          type: CODE,\n          data: Data.create({}),\n          nodes: next(el.childNodes)\n        }\n      case 'pre':\n        return {\n          kind: 'block',\n          type: CODE,\n          nodes: next(el.childNodes)\n        }\n    }\n  }\n\n  serialize = (\n    object: { type: string, kind: string, data: any },\n    children: any[]\n  ) => {\n    if (object.kind === 'mark') {\n      switch (object.type) {\n        case CODE:\n          return <code>{children}</code>\n      }\n    } else if (object.kind === 'block') {\n      switch (object.type) {\n        case CODE:\n          return (\n            <pre style={{ overflow: 'scroll' }}>\n              <code>{children}</code>\n            </pre>\n          )\n      }\n    }\n  }\n}\n"]}